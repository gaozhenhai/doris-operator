{{- if .Values.dorisOperator.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kube-doris.name" . }}-operator
  namespace: {{ template "operator.namespace" . }}
  labels:
    control-plane: {{ template "kube-doris.name" . }}-operator
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: {{ template "kube-doris.name" . }}-operator
    app.kubernetes.io/component: {{ template "kube-doris.name" . }}-operator
    app.kubernetes.io/created-by: {{ template "kube-doris.name" . }}-operator
    app.kubernetes.io/part-of: {{ template "kube-doris.name" . }}-operator
spec:
  selector:
    matchLabels:
      control-plane: {{ template "kube-doris.name" . }}-operator
  replicas: {{ .Values.dorisOperator.replicaCount }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: {{ template "kube-doris.name" . }}-operator
      {{- if .Values.dorisOperator.annotations }}
        {{- toYaml .Values.dorisOperator.annotations | nindent 8 }}
      {{- end }}
      labels:
        control-plane: {{ template "kube-doris.name" . }}-operator
    spec:
      # TODO(user): Uncomment the following code to configure the nodeAffinity expression
      # according to the platforms which are supported by your solution.
      # It is considered best practice to support multiple architectures. You can
      # build your manager image using the makefile target docker-buildx.
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: kubernetes.io/arch
      #             operator: In
      #             values:
      #               - amd64
      #               - arm64
      #               - ppc64le
      #               - s390x
      #           - key: kubernetes.io/os
      #             operator: In
      #             values:
      #               - linux
      containers:
        - command:
            - /dorisoperator
          args:
            - --leader-elect
          image: {{ .Values.dorisOperator.image.repository }}:{{ .Values.dorisOperator.image.tag }}
          imagePullPolicy: Always
          name: dorisoperator
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          # TODO(user): Configure the resources accordingly based on the project requirements.
          # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            {{- toYaml .Values.dorisOperator.resources | nindent 12 }}
      serviceAccountName: {{ template  "operator.serviceAccountName" . }}
      terminationGracePeriodSeconds: 10
  {{- end }}
